plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.0"
}

group = 'ru.bronuh'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    implementation group: 'org.telegram', name: 'telegrambotsextensions', version: '5.3.0'
    implementation group: 'org.telegram', name: 'telegrambots-abilities', version: '5.3.0'
    implementation group: 'org.telegram', name: 'telegrambots', version: '5.3.0'
    shadow group: 'org.telegram', name: 'telegrambotsextensions', version: '5.3.0'
    shadow group: 'org.telegram', name: 'telegrambots-abilities', version: '5.3.0'
    shadow group: 'org.telegram', name: 'telegrambots', version: '5.3.0'
}

def targetJavaVersion = 17
java {
    compileJava.options.encoding = 'UTF-8'
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {

}

build.dependsOn(shadowJar)

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ''
    relocate 'org.telegram', "ru.bronuh.bhgram.org.telegram"
    minimize()

    /*dependencies {
        exclude(dependency {it.moduleGroup == 'com'})
    }*/


    def pluginDeploymentPath = System.getenv('MC_PLUGINS')
    System.out.println("pluginDeploymentPath is "+pluginDeploymentPath)

    if(pluginDeploymentPath!=null) {
        destinationDirectory.set(file(pluginDeploymentPath))
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
